name: kafka_protocol
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        rebar3:
          - '3.24.0'
        otp:
          - '27.3'
          - '26.2'
        kafka:
          - '4.1'
          - '4.0'
          - '3.9'
          - '2.8'
          - '1.1'
    runs-on: ubuntu-latest
    steps:

    # Setup
    - name: Checkout
      uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
    - name: Cache Hex packages
      uses: actions/cache@0400d5f644dc74513175e3cd8d07132dd4860809 # v4.2.4
      with:
        path: ~/.cache/rebar3/hex/hexpm/packages
        key: ${{ runner.os }}-hex2-${{ hashFiles(format('{0}{1}', github.workspace, '/rebar.lock')) }}
        restore-keys: |
          ${{ runner.os }}-hex2-
    - name: Cache Dialyzer PLTs
      uses: actions/cache@0400d5f644dc74513175e3cd8d07132dd4860809 # v4.2.4
      with:
        path: ~/.cache/rebar3/rebar3_*_plt
        key: ${{ runner.os }}--dialyzer2-${{ hashFiles(format('{0}{1}', github.workspace, '/rebar.config')) }}
        restore-keys: |
          ${{ runner.os }}-dialyzer2-

    # Install Erlang
    - name: Install Erlang/OTP
      uses: erlef/setup-beam@e6d7c94229049569db56a7ad5a540c051a010af9 # v1.20.4
      with:
        version-type: strict
        otp-version: ${{matrix.otp}}
        rebar3-version: ${{matrix.rebar3}}

    # Compile
    - name: Compile
      run: |
        rebar3 do compile, dialyzer, ex_doc, xref

    # Tests
    - name: Run tests
      run: |
          export KAFKA_VERSION=${{ matrix.kafka }}
          make test-env
          make eunit || (cd scripts && docker compose logs && exit 1)
          make cover

    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@5a1091511ad55cbe89839c7260b706298ca349f7 # v5.5.1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
